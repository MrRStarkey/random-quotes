{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","quotes","require","currentQuote","setQuote","useState","quote","author","twitterLink","encodeURIComponent","React","createElement","className","id","href","target","rel","SocialIcon","network","text","onClick","i","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"o/XAoDeA,MA7Cf,WAGE,IAAIC,EAASC,EAAQ,IAAiBD,OAGtC,MAAOE,EAAcC,GAAYC,mBAAS,CAAEC,MAAO,QAASC,OAAQ,WAE9DC,EAAc,8EACpBC,mBAAmB,IAAMN,EAAaG,MAAQ,KAAOH,EAAaI,QAYlE,OACEG,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,WAASE,GAAG,YAAYD,UAAU,cAChCF,IAAAC,cAAA,SAAOE,GAAG,QAAO,IAAEV,EAAaG,MAAM,KACtCI,IAAAC,cAAA,KAAGE,GAAG,UAAS,KACVV,EAAaI,QAElBG,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,KACEE,GAAG,cACHC,KAAMN,EACNO,OAAO,SACPC,IAAI,uBAEJN,IAAAC,cAACM,aAAU,CAACC,QAAQ,aAEtBR,IAAAC,cAAA,UAAQE,GAAG,YAAYM,KAAK,MAAMC,QA1B1C,WACE,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWvB,EAAOwB,QAC1CrB,EAAS,IACJD,EACHG,MAAOL,EAAOoB,GAAGf,MACjBC,OAAQN,EAAOoB,GAAGd,WAqB8C,iBChCvDmB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,IAAAC,cAACD,IAAMkC,WAAU,KACflC,IAAAC,cAACX,EAAG,QAOR0B","file":"static/js/main.f3266b6d.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport { useState } from 'react';\n\n\n\nfunction App() {\n\n  \n  let quotes = require('./quotes.json').quotes;\n  //console.log(quotes.length);\n   \n  const [currentQuote, setQuote] = useState({ quote: \"quote\", author: \"author\"});\n\n  const twitterLink = 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\n  encodeURIComponent('\"' + currentQuote.quote + '\" ' + currentQuote.author);\n\n  function displayNewQuote () {\n    let i = Math.floor(Math.random() * quotes.length);\n    setQuote({\n      ...currentQuote,\n      quote: quotes[i].quote,\n      author: quotes[i].author\n    });\n    \n  }\n  \n  return (\n    <div className=\"App\">\n      <wrapper id=\"quote-box\" className=\"App-header\">\n        <quote id=\"text\">\"{currentQuote.quote}\"</quote>\n        <p id=\"author\">\n          - {currentQuote.author}\n        </p>\n        <div className='buttonWrapper'>  \n          <a\n            id=\"tweet-quote\"\n            href={twitterLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <SocialIcon network=\"twitter\" />\n          </a>\n          <button id='new-quote' text=\"new\" onClick={displayNewQuote}>New Quote</button>\n          \n        </div>\n      </wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}